import React from 'react'
import { Routes } from '@/lib'
import { Table, Link } from '@/Components'
import { EditButton } from '@/Components/Button'
import { type ITableProps } from '@/Components/Table/Table'

const <%= singular_table_name.camelize %>Table = (props: ITableProps) => {
	return (
		<Table>
			<Table.Head>
				<Table.Row><% attributes.each do |column| %>
					<% unless column.type == :references %><Table.Cell sort="<%= column.name %>"><%= column.name.capitalize %></Table.Cell><% end; end %>
					<Table.Cell className="actions">Actions</Table.Cell>
				</Table.Row>
			</Table.Head>
			<Table.Body>
				<Table.RowIterator render={ (<%= singular_table_name %>: Schema.<%= plural_table_name.camelize %>Index) => (
					<Table.Row key={ <%= singular_table_name %>.id }><% attributes.each do |column| %>
						<% unless column.type == :references %><Table.Cell>
							<Link href={ Routes.<%= singular_table_name.camelize(:lower) %>(<%= singular_table_name %><%= attributes.include?(:slug) ? ".slug" : ".id" %>) }>{ <%= singular_table_name %>.<%= column.name %> }</Link>
						</Table.Cell><% end; end %>
						<Table.Cell>
							<EditButton href={ Routes.edit<%= singular_table_name.camelize %>(<%= singular_table_name %><%= attributes.include?(:slug) ? ".slug" : ".id" %>) } />
						</Table.Cell>
					</Table.Row>
				) } />
			</Table.Body>
		</Table>
	)
}

export default <%= singular_table_name.camelize %>Table
